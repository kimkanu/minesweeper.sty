% Minesweeper package presented by Keonwoo Kim <keonwoo@kaist.ac.kr>
% Copyright 2020 Keonwoo Kim

\RequirePackage{tikz}
\RequirePackage{luacode}
\RequirePackage{fontspec}
\RequirePackage{xcolor}


%%%%%
% Colors

\definecolor{MINESWEEPERCOLORshade}{HTML}{7B7B7B}
\definecolor{MINESWEEPERCOLORlightgray}{HTML}{BDBDBD}
\definecolor{MINESWEEPERCOLORbordergray}{HTML}{7B7B7B}
\definecolor{MINESWEEPERCOLORone}{HTML}{0000FF}
\definecolor{MINESWEEPERCOLORtwo}{HTML}{008000}
\definecolor{MINESWEEPERCOLORthree}{HTML}{FF0000}
\definecolor{MINESWEEPERCOLORfour}{HTML}{000080}
\definecolor{MINESWEEPERCOLORfive}{HTML}{800000}
\definecolor{MINESWEEPERCOLORsix}{HTML}{008080}
\definecolor{MINESWEEPERCOLORseven}{HTML}{000000}
\definecolor{MINESWEEPERCOLOReight}{HTML}{808080}


%%%%%
% Constants

\def\NumbersInEnglish{{"", "one", "two", "three", "four", "five", "six", "seven", "eight"}}
\makeatletter
\def\textvdots{%
    \raisebox{3.5\p@}{%
        \vbox{%
            \baselineskip 6.5\p@
            \lineskiplimit \z@
            \kern 6\p@
            \hbox{.}\hbox{.}\hbox{.}%
        }%
    }%
}
\makeatother


%%%%%
% Function Caller

\newcommand*\DrawMines[2][1]{%
    \let\origtilde=~%
    \catcode`\~=12%
    \def~{\string~}%
    \begin{scope}[scale=#1, every node/.style={scale=#1}]%
        \luadirect{draw_mines(\luastring{#2})}
    \end{scope}%
    \catcode`\~=13%
    \let~=\origtilde%
}


%%%%%
% Main Lua Logic

\begin{luacode}
local function is_empty(s)
    return s == nil or s == ''
end

local function trim(s)
    return s:match'^()%s*$' and '' or s:match'^%s*(.*%S)'
end

local function map(tbl, f)
    local t = {}
    for k,v in pairs(tbl) do
        t[k] = f(v)
    end
    return t
end

function draw_mines(s)
    lines = {}
    max_num_char = 0
    for l in string.gmatch(s, '([^\\]+)') do
        j = trim(l)
        if not is_empty(j) then
            table.insert(lines, j)
            if j:len() > max_num_char then
                max_num_char = j:len()
            end
        end
    end

    draw_background(max_num_char, #lines)

    for i, line in ipairs(lines) do
        draw_line(i, line, max_num_char)
    end
end

function draw_background(width, height)
    tex.print(
        string.format(
            [[\fill[MINESWEEPERCOLORlightgray] (-0.5, 0.5) rectangle (]] .. "%f, %f" .. [[);]],
            width + 0.5,
            -height - 0.5
        )
    );

    tex.print(
        string.format(
            [[\fill[white] (-0.125, 0.125) rectangle (]] .. "%f, %f" .. [[);]],
            width + 0.125,
            -height - 0.125
        )
    );
    tex.print(
        string.format(
            [[\fill[MINESWEEPERCOLORbordergray] (0, 0) -- (]] .. "%f" .. [[, 0) -- (]] .. "%f" .. [[, 0.125) -- (-0.125, 0.125) -- (-0.125, ]] .. "%f" .. [[) -- (0, ]] .. "%f" .. [[) -- cycle;]],
            width,
            width + 0.125,
            -height - 0.125,
            -height
        )
    );

end

function draw_line(j, line, max_num_char)
    for i = 1, max_num_char do
        if i <= #line then
            local c = line:sub(i, i)
            local n = tonumber(c)

            if n ~= nil then
                if n > 8 or n < 1 then
                    tex.print(
                        string.format(
                            [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01); \fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                            i - 1.01, -j + 1.01,
                            i - 1 + 0.0625, -j + 1 - 0.0625
                        )
                    )
                else
                    tex.print(
                        string.format(
                            [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                            [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                            i - 1.01, -j + 1.01,
                            i - 1 + 0.0625, -j + 1 - 0.0625
                        )
                    )
                    tex.print(
                        string.format(
                            "\\node at (%f, %f) { \\pgfmathparse{\\NumbersInEnglish[%d]}\\sffamily\\bfseries\\Huge\\textcolor{MINESWEEPERCOLOR\\pgfmathresult}{\\the\\numexpr%d\\relax}};",
                            i - 1 + 0.53125, -j + 0.5,
                            n, n
                        )
                    )
                end
            else
                if (c:match("%W")) then
                    if c == "|" then
                        tex.print(
                            string.format(
                                [[\fill[white] (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                                [[\fill[MINESWEEPERCOLORshade]  (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.75, -0.75);]],
                                i - 1, -j + 1, i, -j + 1, i - 1, -j,
                                i, -j + 1, i, -j, i - 1, -j,
                                i - 1 + 0.125, -j + 1 - 0.125
                            )
                        )

                        tex.print(
                            string.format(
                                "\\node at (%f, %f) {\\Large\\fontspec{Noto Color Emoji}[RawFeature={mode=harf}]{ðŸš©}};",
                                i - 0.5, -j + 0.5
                            )
                        )
                    elseif c == "~" then
                        tex.print(
                            string.format(
                                [[\fill[white] (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                                [[\fill[MINESWEEPERCOLORshade]  (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.75, -0.75);]],
                                i - 1, -j + 1, i, -j + 1, i - 1, -j,
                                i, -j + 1, i, -j, i - 1, -j,
                                i - 1 + 0.125, -j + 1 - 0.125
                            )
                        )
                    elseif c == "*" then
                        tex.print(
                            string.format(
                                [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                                i - 1.01, -j + 1.01,
                                i - 1 + 0.0625, -j + 1 - 0.0625
                            )
                        )
                        tex.print(
                            string.format(
                                "\\node at (%f, %f) { \\LARGE\\fontspec{Noto Color Emoji}[RawFeature={mode=harf}]{ðŸ’£}};",
                                i - 1 + 0.53125, -j + 0.47
                            )
                        )
                    elseif c == "." then
                        tex.print(
                            string.format(
                                [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                                i - 1.01, -j + 1.01,
                                i - 1 + 0.0625, -j + 1 - 0.0625
                            )
                        )
                        tex.print(
                            string.format(
                                "\\node at (%f, %f) { \\sffamily\\Huge\\selectfont{...}};",
                                i - 1 + 0.53125, -j + 0.5
                            )
                        )
                    elseif c == ":" then
                        tex.print(
                            string.format(
                                [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                                i - 1.01, -j + 1.01,
                                i - 1 + 0.0625, -j + 1 - 0.0625
                            )
                        )
                        tex.print(
                            string.format(
                                "\\node at (%f, %f) { \\sffamily\\Huge\\selectfont{\\textvdots}};",
                                i - 1 + 0.53125, -j + 0.5
                            )
                        )
                    elseif c == " " or c == "_" then
                        tex.print(
                            string.format(
                                [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                                i - 1.01, -j + 1.01,
                                i - 1 + 0.0625, -j + 1 - 0.0625
                            )
                        )
                    else
                        tex.print(
                            string.format(
                                [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                                [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                                i - 1.01, -j + 1.01,
                                i - 1 + 0.0625, -j + 1 - 0.0625
                            )
                        )
                        tex.print(
                            string.format(
                                "\\node at (%f, %f) { \\sffamily\\bfseries\\Huge{?}};",
                                i - 1 + 0.53125, -j + 0.5
                            )
                        )
                    end
                else
                    tex.print(
                        string.format(
                            [[\fill[white] (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                            [[\fill[MINESWEEPERCOLORshade]  (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                            [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.75, -0.75);]],
                            i - 1, -j + 1, i, -j + 1, i - 1, -j,
                            i, -j + 1, i, -j, i - 1, -j,
                            i - 1 + 0.125, -j + 1 - 0.125
                        )
                    )

                    local c_ = c:lower()
                    if c_ ~= c then
                        c_ = c_ .. "'"
                    end

                    tex.print(
                        string.format(
                            "\\node at (%f, %f) {\\huge\\color{black} $" .. c_ .. "\\vphantom{Xf'}$};",
                            i - 0.5, -j + 0.46
                        )
                    )
                end
            end
        elseif string.sub(line, -1) == "~" then
            tex.print(
                string.format(
                    [[\fill[white] (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                    [[\fill[MINESWEEPERCOLORshade]  (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- (]] .. "%f, %f" .. [[) -- cycle;]] ..
                    [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.75, -0.75);]],
                    i - 1, -j + 1, i, -j + 1, i - 1, -j,
                    i, -j + 1, i, -j, i - 1, -j,
                    i - 1 + 0.125, -j + 1 - 0.125
                )
            )
        else
            tex.print(
                string.format(
                    [[\fill[MINESWEEPERCOLORbordergray] (]] .. "%f, %f" .. [[) rectangle +(1.01, -1.01);]] ..
                    [[\fill[MINESWEEPERCOLORlightgray] (]] .. "%f, %f" .. [[) rectangle +(0.9375, -0.9375);]],
                    i - 1.01, -j + 1.01,
                    i - 1 + 0.0625, -j + 1 - 0.0625
                )
            )
        end
    end
end
\end{luacode}